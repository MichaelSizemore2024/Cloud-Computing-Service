// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: proto/education.proto

package common

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// EducationServiceClient is the client API for EducationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type EducationServiceClient interface {
	InsertEducation(ctx context.Context, in *EducationData, opts ...grpc.CallOption) (*EducationResponse, error)
}

type educationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewEducationServiceClient(cc grpc.ClientConnInterface) EducationServiceClient {
	return &educationServiceClient{cc}
}

func (c *educationServiceClient) InsertEducation(ctx context.Context, in *EducationData, opts ...grpc.CallOption) (*EducationResponse, error) {
	out := new(EducationResponse)
	err := c.cc.Invoke(ctx, "/EducationService/InsertEducation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EducationServiceServer is the server API for EducationService service.
// All implementations must embed UnimplementedEducationServiceServer
// for forward compatibility
type EducationServiceServer interface {
	InsertEducation(context.Context, *EducationData) (*EducationResponse, error)
	mustEmbedUnimplementedEducationServiceServer()
}

// UnimplementedEducationServiceServer must be embedded to have forward compatible implementations.
type UnimplementedEducationServiceServer struct {
}

func (UnimplementedEducationServiceServer) InsertEducation(context.Context, *EducationData) (*EducationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InsertEducation not implemented")
}
func (UnimplementedEducationServiceServer) mustEmbedUnimplementedEducationServiceServer() {}

// UnsafeEducationServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to EducationServiceServer will
// result in compilation errors.
type UnsafeEducationServiceServer interface {
	mustEmbedUnimplementedEducationServiceServer()
}

func RegisterEducationServiceServer(s grpc.ServiceRegistrar, srv EducationServiceServer) {
	s.RegisterService(&EducationService_ServiceDesc, srv)
}

func _EducationService_InsertEducation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EducationData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EducationServiceServer).InsertEducation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/EducationService/InsertEducation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EducationServiceServer).InsertEducation(ctx, req.(*EducationData))
	}
	return interceptor(ctx, in, info, handler)
}

// EducationService_ServiceDesc is the grpc.ServiceDesc for EducationService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var EducationService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "EducationService",
	HandlerType: (*EducationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InsertEducation",
			Handler:    _EducationService_InsertEducation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/education.proto",
}
